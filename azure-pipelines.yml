# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master

pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-latest'
steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Use Terraform 0.12.6'
  inputs:
    terraformVersion: 0.12.6

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform init'
  inputs:
    command: init

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform plan'
  inputs:
    command: plan
    environmentServiceName: 'Visual Studio Enterprise – MPN (59eb3dff-9caf-469f-838a-b026eb67cd85)'
    secureVarsFile: '74ae6846-1a1a-4d9d-9d69-cca1f68352d4'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform apply'
  inputs:
    command: apply
    environmentServiceName: 'Visual Studio Enterprise – MPN (59eb3dff-9caf-469f-838a-b026eb67cd85)'
    secureVarsFile: '74ae6846-1a1a-4d9d-9d69-cca1f68352d4'
    commandOptions: '-input=false'

