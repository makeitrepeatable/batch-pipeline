# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master

pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-latest'
variables:
- group: 'Secrets'
- group: 'Subscription'
steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Use Terraform 0.12.6'
  inputs:
    terraformVersion: 0.12.6
- script: |
   az login --service-principal -u $(tfsp-id) -p $(tfsp-secret) --tenant $(tenant_id)
   ACCESS_KEY=`az storage account keys list -n $(storage_acct) -o json | jq -r '.[0].value'`
   echo "##vso[task.setvariable variable=ACCESS_KEY]$ACCESS_KEY"
  displayName: 'AZ Login and Set ACCESS_KEY'
- script: |
   cat << EOT >> terraform.tfvars
   access_key = "$(ACCESS_KEY)"
   tenant_id = "$(tenant_id)"
   subscription_id = "$(subscription_id)"
   client_id = "$(tfsp-id)"
   client_secret = "$(tfsp-secret)"
   EOT
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Create terraform.tfvars'
- script: |
   terraform validate
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Terraform Validate'
